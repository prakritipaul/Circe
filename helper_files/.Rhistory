load("/Users/prakritipaul/Library/CloudStorage/GoogleDrive-ppaul@princeton.edu/My Drive/Levine Lab/R_Environments/Cocktails/Final_Cocktail_Pipeline_Environments/Final_BTN_cocktail_pipeline_environment.RData")
knitr::opts_chunk$set(echo = TRUE)
library(URD)
library(Seurat)
library(ggplot2)
library(tidyverse)
library(stats)
library(Matrix)
library(stringr)
library(edgeR)
library(rlang)
library(grpreg)
library(glmnet)
source("./helper_files/final_main_pipeline_start_script.R")
source("./helper_files/final_helper_functions.R")
BTN_precursor_sibling_pseudostate_cells <- pseudotimed_BTN_precursor_sibling_segment_cells[1:284]
# Raw Matrices with expression levels of only TFs.
# 595 x 318
BTN_precursor_pseudostate_TF_raw_mat <- URD_raw_data[tfs_in_URD, BTN_precursor_pseudostate_cells]
# 595 x 256
BTN_precursor_sibling_pseudostate_TF_raw_mat <- URD_raw_data[tfs_in_URD, BTN_precursor_sibling_pseudostate_cells]
# 595 x 240
BTN_mother_pseudostate_TF_raw_mat <- URD_raw_data[tfs_in_URD, BTN_mother_pseudostate_cells]
# 595 x 292
BTN_mother_sibling_pseudostate_TF_raw_mat <- URD_raw_data[tfs_in_URD, BTN_mother_sibling_pseudostate_cells]
# Raw Matrices with expression levels of all genes.
# 14809 x 318
BTN_precursor_pseudostate_raw_mat <- URD_raw_data[, BTN_precursor_pseudostate_cells]
# 14809 x 256
BTN_precursor_sibling_pseudostate_raw_mat <- URD_raw_data[, BTN_precursor_sibling_pseudostate_cells]
DEG_lists_out_dir <- "./DEG_lists/"
BTN_precursor_v_sibling_pseudostate_mat <- as.matrix(cbind(BTN_precursor_pseudostate_raw_mat, BTN_precursor_sibling_pseudostate_raw_mat))
BTN_precursor_v_sibling_pseudostate_edgeR_outputs <- complete_edgeR_pipeline(BTN_precursor_v_sibling_pseudostate_mat, ncol(BTN_precursor_pseudostate_raw_mat), ncol(BTN_precursor_sibling_pseudostate_raw_mat), 0.05, -1, 50)
# 215
BTN_precursor_pseudostate_DEGs_df <- BTN_precursor_v_sibling_pseudostate_edgeR_outputs[[1]]
BTN_precursor_pseudostate_DEGs <- rownames(BTN_precursor_pseudostate_DEGs_df)
length(BTN_precursor_pseudostate_DEGs)
write_csv_helper(BTN_precursor_pseudostate_DEGs, paste0(DEG_lists_out_dir, "284_BTN_precursor_pseudostate_DEGs.csv"))
BTN_precursor_v_sibling_pseudostate_TF_mat <- as.matrix(cbind(BTN_precursor_pseudostate_TF_raw_mat, BTN_precursor_sibling_pseudostate_TF_raw_mat))
BTN_precursor_v_sibling_pseudostate_TF_edgeR_outputs <- complete_edgeR_pipeline(BTN_precursor_v_sibling_pseudostate_TF_mat, ncol(BTN_precursor_pseudostate_TF_raw_mat), ncol(BTN_precursor_sibling_pseudostate_TF_raw_mat), 0.05, -1, 50)
# 12
BTN_precursor_v_sibling_pseudostate_TF_DEGs_df <- BTN_precursor_v_sibling_pseudostate_TF_edgeR_outputs[[1]]
# Get TF orthologs.
named_BTN_precursor_v_sibling_pseudostate_TF_DEGs_df <- convert_khids_to_ortholog(BTN_precursor_v_sibling_pseudostate_TF_DEGs_df)
BTN_precursor_v_sibling_pseudostate_TF_DEGs <- named_BTN_precursor_v_sibling_pseudostate_TF_DEGs_df$Ghost.Name
write_csv_helper(BTN_precursor_v_sibling_pseudostate_TF_DEGs, paste0(DEG_lists_out_dir, "284_BTN_precursor_v_sibling_pseudostate_TF_DEGs.csv"))
View(BTN_precursor_v_sibling_pseudostate_TF_DEGs_df)
BTN_precursor_v_mother_pseudostate_TF_mat <- as.matrix(cbind(BTN_precursor_pseudostate_TF_raw_mat, BTN_mother_pseudostate_TF_raw_mat))
BTN_precursor_v_mother_pseudostate_TF_edgeR_outputs <- complete_edgeR_pipeline(BTN_precursor_v_mother_pseudostate_TF_mat, ncol(BTN_precursor_pseudostate_TF_raw_mat), ncol(BTN_mother_pseudostate_TF_raw_mat), 0.05, -1, 50)
# 13
BTN_precursor_v_mother_pseudostate_TF_DEGs_df <- BTN_precursor_v_mother_pseudostate_TF_edgeR_outputs[[1]]
# Get TF orthologs.
named_BTN_precursor_v_mother_pseudostate_TF_DEGs_df <- convert_khids_to_ortholog(BTN_precursor_v_mother_pseudostate_TF_DEGs_df)
BTN_precursor_v_mother_pseudostate_TF_DEGs <- named_BTN_precursor_v_mother_pseudostate_TF_DEGs_df$Ghost.Name
dim(BTN_precursor_v_mother_pseudostate_TF_DEGs_df)
dim(BTN_precursor_v_sibling_pseudostate_TF_DEGs_df)
BTN_precursor_v_sibling_pseudostate_TF_mat <- as.matrix(cbind(BTN_precursor_pseudostate_TF_raw_mat, BTN_precursor_sibling_pseudostate_TF_raw_mat))
BTN_precursor_v_sibling_pseudostate_TF_edgeR_outputs <- complete_edgeR_pipeline(BTN_precursor_v_sibling_pseudostate_TF_mat, ncol(BTN_precursor_pseudostate_TF_raw_mat), ncol(BTN_precursor_sibling_pseudostate_TF_raw_mat), 0.05, -1, 50)
# 12
BTN_precursor_v_sibling_pseudostate_TF_DEGs_df <- BTN_precursor_v_sibling_pseudostate_TF_edgeR_outputs[[1]]
# Get TF orthologs.
named_BTN_precursor_v_sibling_pseudostate_TF_DEGs_df <- convert_khids_to_ortholog(BTN_precursor_v_sibling_pseudostate_TF_DEGs_df)
BTN_precursor_v_sibling_pseudostate_TF_DEGs <- named_BTN_precursor_v_sibling_pseudostate_TF_DEGs_df$Ghost.Name
dim(BTN_precursor_v_sibling_pseudostate_TF_DEGs_df)
write_csv_helper(BTN_precursor_v_sibling_pseudostate_TF_DEGs, paste0(DEG_lists_out_dir, "284_BTN_precursor_v_sibling_pseudostate_TF_DEGs.csv"))
BTN_precursor_pseudostate_mean_TF_exp_df <- make_named_mean_TF_exp_df(BTN_precursor_pseudostate_cells)
BTN_mother_pseudostate_mean_TF_exp_df <- make_named_mean_TF_exp_df(BTN_mother_pseudostate_cells)
# 26
BTN_unfiltered_candidate_cocktail_tfs <- unique(c(named_BTN_precursor_v_sibling_pseudostate_TF_DEGs_df$KH.gene.model,
named_BTN_precursor_v_mother_pseudostate_TF_DEGs_df$KH.gene.model,
named_BTN_mother_v_sibling_pseudostate_TF_DEGs_df$KH.gene.model))
# Take 50% cutoff.
# This returns both a union and intersection of top 50% most highly expressed unfiltered candidate cocktail TFs.
BTN_cutoff_df_list <- get_cutoff_df(BTN_precursor_pseudostate_mean_TF_exp_df, BTN_mother_pseudostate_mean_TF_exp_df, BTN_unfiltered_candidate_cocktail_tfs, 0.5)
# Let us take the union.
# 15
BTN_cutoff_union <- BTN_cutoff_df_list$union
# These are the Candidate Cocktail TFs.
BTN_candidate_cocktail_tfs <- unique(c(BTN_cutoff_union$Ghost.Name_precursor, BTN_cutoff_union$Ghost.Name_mother))
# Remove any NA's!
BTN_candidate_cocktail_tfs <- BTN_candidate_cocktail_tfs[!is.na(BTN_candidate_cocktail_tfs)]
# We also want their khids.
BTN_candidate_cocktail_khids <- BTN_cutoff_union$KH.gene.model
View(BTN_cutoff_union)
write_csv_helper(BTN_candidate_cocktail_tfs, paste0(DEG_lists_out_dir, "284_BTN_candidate_cocktail_tfs.csv"))
# 4
common_BTN_DEG_TFs <- intersect(BTN_candidate_cocktail_khids, BTN_precursor_pseudostate_DEGs)
# 211
cleaned_BTN_precursor_pseudostate_DEGs <- setdiff(BTN_precursor_pseudostate_DEGs, common_BTN_DEG_TFs)
length(common_BTN_DEG_TFs)
length(cleaned_BTN_precursor_pseudostate_DEGs)
# 318, 15, 211
BTN_n <- length(BTN_precursor_pseudostate_cells)
BTN_p <- length(BTN_candidate_cocktail_tfs)
BTN_k <- length(cleaned_BTN_precursor_pseudostate_DEGs)
BTN_n
BTN_p
BTN_k
# 318 x 15
BTN_TFs_in_precursor_pseudostate_mat <- t(URD_data[BTN_candidate_cocktail_khids, BTN_precursor_pseudostate_cells])
BTN_S_matrix <- BTN_TFs_in_precursor_pseudostate_mat
BTN_zero_matrix <- matrix(0, BTN_n, BTN_p)
# This is a dummy matrix- we will remove it at the end.
BTN_grplasso_X_mat <- matrix(1, BTN_n, BTN_p*BTN_k)
for (i in 1:BTN_k) {
BTN_L_matrix <- do.call(cbind, replicate(i-1, BTN_zero_matrix, simplify=FALSE))
BTN_R_matrix <- do.call(cbind, replicate(BTN_k-i, BTN_zero_matrix, simplify=FALSE))
# At each iteration, we create a row in which Matrix S is sandwiched between
# Left "L" Zero Matrix(ces) and Right "R" Zero Matrix(ces) given its position on
# the diagonal of Group Lasso Matrix X.
BTN_grplasso_mat_row <- do.call(cbind, list(BTN_L_matrix, BTN_S_matrix, BTN_R_matrix))
BTN_grplasso_X_mat <- rbind(BTN_grplasso_X_mat, BTN_grplasso_mat_row)
}
# 67098 x 3165
BTN_grplasso_X_mat_2 <- BTN_grplasso_X_mat[-c(1:BTN_n), ]
dim(BTN_TFs_in_precursor_pseudostate_mat)
dim(BTN_grplasso_X_mat_2)
BTN_grplasso_X_mat_row_cells <- rep(paste0("_cell_", seq(1, BTN_n)), BTN_k)
BTN_DEG_statuses <- rep(c(1:BTN_k), each = BTN_n)
BTN_new_grplasso_X_mat_2_rownames <- paste0("DEG_", BTN_DEG_statuses, BTN_grplasso_X_mat_row_cells)
rownames(BTN_grplasso_X_mat_2) <- BTN_new_grplasso_X_mat_2_rownames
BTN_grplasso_X_mat_col_TFs <- rep(paste0("_TF", seq(1, BTN_p)), BTN_k)
BTN_DEG_statuses_cols <- rep(c(1:BTN_k), each = BTN_p)
BTN_new_grplasso_X_mat_2_colnames <- paste0("DEG_", BTN_DEG_statuses_cols, BTN_grplasso_X_mat_col_TFs)
colnames(BTN_grplasso_X_mat_2) <- BTN_new_grplasso_X_mat_2_colnames
# 67098 x 3165
final_grplasso_X_mat <- as.matrix(BTN_grplasso_X_mat_2)
dim(final_grplasso_X_mat)
# 318 x 211
BTN_precursor_DEGs_in_precursors_mat <- t(URD_data[cleaned_BTN_precursor_pseudostate_DEGs, BTN_precursor_pseudostate_cells])
dim(BTN_precursor_DEGs_in_precursors_mat)
BTN_grplasso_Y_vec <- c()
for (DEG in 1:BTN_k) {
for (cell in 1:BTN_n) {
BTN_DEG_cell_exp <- BTN_precursor_DEGs_in_precursors_mat[cell, DEG]
BTN_grplasso_Y_vec <- c(BTN_grplasso_Y_vec, BTN_DEG_cell_exp)
}
}
# 67098 x 1
BTN_grplasso_Y_mat <- as.matrix(BTN_grplasso_Y_vec, ncol=1, nrow=(BTN_n*BTN_k))
dim(BTN_grplasso_Y_mat)
BTN_grplasso_Y_DEG_statuses <- rep(c(1:BTN_k), each = BTN_n)
BTN_grplasso_Y_DEGs <- paste0("DEG_", BTN_grplasso_Y_DEG_statuses)
BTN_grplasso_Y_cells <- rep(paste0("_cell_", seq(1, BTN_n)), BTN_k)
BTN_new_grplasso_Y_rownames <- paste0(BTN_grplasso_Y_DEGs, BTN_grplasso_Y_cells)
rownames(BTN_grplasso_Y_mat) <- BTN_new_grplasso_Y_rownames
# 67098 x 1
final_BTN_grplasso_Y_mat <- BTN_grplasso_Y_mat
dim(final_BTN_grplasso_Y_mat)
grplasso_BTN_groups <- rep(seq(1, BTN_p), BTN_k)
BTN_X <- final_grplasso_X_mat
BTN_Y <- final_BTN_grplasso_Y_mat
BTN_group_id <- grplasso_BTN_groups
# ~54 mins to Run
grplasso_BTN_cv_grepreg_fit <- cv.grpreg(BTN_X, BTN_Y, BTN_group_id, penalty="grLasso")
# Key: lambda; Values: Set of Selected TF Groups
BTN_group_lassoed_tf_list <- get_group_lassoed_tf_list(grplasso_BTN_cv_grepreg_fit, BTN_candidate_cocktail_tfs)
# Key: lambda; Values: Set of Non-selected TF Groups
BTN_non_group_lassoed_TF_list <- lapply(BTN_group_lassoed_tf_list, get_non_group_lassoed_TFs, BTN_candidate_cocktail_tfs)
View(BTN_group_lassoed_tf_list)
View(BTN_non_group_lassoed_TF_list)
knitr::opts_chunk$set(echo = TRUE)
PSC_mother_pseudostate_cells <- pseudotimed_PSC_mother_segment_cells[1:363]
